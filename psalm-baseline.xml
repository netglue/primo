<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.8.1@f73f2299dbc59a3e6c4d66cff4605176e728ee69">
  <file src="src/Container/ApiFactory.php">
    <MixedArgument occurrences="7">
      <code>$apiUrl</code>
      <code>$config['prismic']['token'] ?? null</code>
      <code>$container-&gt;has(PrismicApiCache::class) ? $container-&gt;get(PrismicApiCache::class) : null</code>
      <code>$container-&gt;has(PrismicHttpClient::class) ? $container-&gt;get(PrismicHttpClient::class) : null</code>
      <code>$container-&gt;has(RequestFactoryInterface::class) ? $container-&gt;get(RequestFactoryInterface::class) : null</code>
      <code>$container-&gt;has(ResultSetFactory::class) ? $container-&gt;get(ResultSetFactory::class) : null</code>
      <code>$container-&gt;has(UriFactoryInterface::class) ? $container-&gt;get(UriFactoryInterface::class) : null</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="2">
      <code>$config['prismic']</code>
      <code>$config['prismic']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$apiUrl</code>
      <code>$config</code>
    </MixedAssignment>
  </file>
  <file src="src/Container/LinkResolverFactory.php">
    <MixedArgument occurrences="4">
      <code>$container-&gt;get(ApiClient::class)-&gt;data()-&gt;bookmarks()</code>
      <code>$container-&gt;get(RouteMatcher::class)</code>
      <code>$container-&gt;get(RouteParams::class)</code>
      <code>$container-&gt;get(UrlHelper::class)</code>
    </MixedArgument>
    <MixedMethodCall occurrences="2">
      <code>bookmarks</code>
      <code>data</code>
    </MixedMethodCall>
  </file>
  <file src="src/Event/WebhookEvent.php">
    <FalsableReturnStatement occurrences="1">
      <code>DateTimeImmutable::createFromFormat('U', (string) $this-&gt;received, new DateTimeZone('UTC'))</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>DateTimeImmutable</code>
    </InvalidFalsableReturnType>
    <MixedArgument occurrences="1">
      <code>$serialized</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$this-&gt;payload</code>
      <code>$this-&gt;received</code>
    </MixedAssignment>
  </file>
  <file src="src/Exception/RequestError.php">
    <UnsafeInstantiation occurrences="1">
      <code>new static($message, $code)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Exception/RoutingError.php">
    <UnsafeInstantiation occurrences="2"/>
  </file>
  <file src="src/Http/PrismicHttpClientFactory.php">
    <MixedInferredReturnType occurrences="1">
      <code>ClientInterface</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$container-&gt;get(ClientInterface::class)</code>
    </MixedReturnStatement>
  </file>
  <file src="src/LinkResolver.php">
    <MixedArrayAccess occurrences="1">
      <code>$options['defaults'][$this-&gt;routeParams-&gt;reuseResultParams()]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$reuseResultParams</code>
    </MixedAssignment>
  </file>
  <file src="src/Middleware/Container/DocumentResolverFactory.php">
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(Resolver::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Middleware/Container/ExpiredPreviewHandlerFactory.php">
    <MixedArgument occurrences="1">
      <code>$config['primo']['previews']['defaultUrl'] ?? '/'</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['primo']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
  </file>
  <file src="src/Middleware/Container/InjectRequestCookiesFactory.php">
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ApiClient::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Middleware/Container/PreviewCacheHeadersFactory.php">
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(ApiClient::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Middleware/Container/PreviewHandlerFactory.php">
    <MixedArgument occurrences="3">
      <code>$container-&gt;get(ApiClient::class)</code>
      <code>$container-&gt;get(LinkResolver::class)</code>
      <code>$defaultUrl</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['primo']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$defaultUrl</code>
    </MixedAssignment>
  </file>
  <file src="src/Middleware/Container/PrismicTemplateFactory.php">
    <MixedArgument occurrences="2">
      <code>$container-&gt;get(TemplateRendererInterface::class)</code>
      <code>$templateAttribute</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['primo']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$templateAttribute</code>
    </MixedAssignment>
  </file>
  <file src="src/Middleware/Container/WebhookHandlerFactory.php">
    <MixedArgument occurrences="1">
      <code>$config['primo']['webhook']['secret'] ?? null</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['primo']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>EventDispatcherInterface</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$container-&gt;get(EventDispatcherInterface::class)</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Middleware/InjectRequestCookies.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$request-&gt;getCookieParams()</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/Middleware/PreviewHandler.php">
    <MixedArgument occurrences="1">
      <code>$query['token']</code>
    </MixedArgument>
  </file>
  <file src="src/Middleware/PrismicTemplate.php">
    <MixedArgument occurrences="1">
      <code>$template</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$template</code>
    </MixedAssignment>
  </file>
  <file src="src/ResultSet/Container/HydratingResultSetFactoryFactory.php">
    <MixedArgument occurrences="1">
      <code>$container-&gt;get(TypeMap::class)</code>
    </MixedArgument>
  </file>
  <file src="src/ResultSet/Container/TypeMapFactory.php">
    <MixedArgument occurrences="2">
      <code>$options['default'] ?? Document::class</code>
      <code>$options['map'] ?? []</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="3">
      <code>$config['primo']</code>
      <code>$options['default']</code>
      <code>$options['map']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$options</code>
    </MixedAssignment>
  </file>
  <file src="src/ResultSet/HydratingResultSetFactory.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$results</code>
    </ArgumentTypeCoercion>
    <InvalidStringClass occurrences="1">
      <code>new $class($content)</code>
    </InvalidStringClass>
    <MixedArgument occurrences="1">
      <code>$documentData</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$documentData</code>
    </MixedAssignment>
    <ParamNameMismatch occurrences="1">
      <code>$data</code>
    </ParamNameMismatch>
  </file>
  <file src="src/ResultSet/TypeMap.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($type)</code>
    </DocblockTypeContradiction>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$class</code>
    </MixedArgumentTypeCoercion>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>[$type]</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/RouteProvider.php">
    <MixedArgument occurrences="2">
      <code>$previewUrl</code>
      <code>$url</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="4">
      <code>$config['primo']</code>
      <code>$config['primo']</code>
      <code>$options['enabled']</code>
      <code>$options['url']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="6">
      <code>$config</code>
      <code>$config</code>
      <code>$enabled</code>
      <code>$options</code>
      <code>$previewUrl</code>
      <code>$url</code>
    </MixedAssignment>
  </file>
  <file src="src/Router/Container/DocumentResolverFactory.php">
    <MixedArgument occurrences="2">
      <code>$container-&gt;get(ApiClient::class)</code>
      <code>$container-&gt;get(RouteParams::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Router/Container/RouteMatcherFactory.php">
    <MixedArgument occurrences="2">
      <code>$container-&gt;get(RouteCollector::class)</code>
      <code>$container-&gt;get(RouteParams::class)</code>
    </MixedArgument>
  </file>
  <file src="src/Router/Container/RouteParamsFactory.php">
    <MixedArgument occurrences="1">
      <code>$options</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$config['primo']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="2">
      <code>$config</code>
      <code>$options</code>
    </MixedAssignment>
  </file>
  <file src="src/Router/DocumentResolver.php">
    <MixedArgument occurrences="8">
      <code>$bookmark</code>
      <code>$id</code>
      <code>$id</code>
      <code>$lang</code>
      <code>$tags</code>
      <code>$type</code>
      <code>$type</code>
      <code>$uid</code>
    </MixedArgument>
    <MixedAssignment occurrences="8">
      <code>$bookmark</code>
      <code>$id</code>
      <code>$id</code>
      <code>$lang</code>
      <code>$tags</code>
      <code>$tags</code>
      <code>$type</code>
      <code>$uid</code>
    </MixedAssignment>
  </file>
  <file src="src/Router/RouteMatcher.php">
    <MixedArrayAccess occurrences="5">
      <code>$options['defaults'][$this-&gt;params-&gt;bookmark()]</code>
      <code>$options['defaults'][$this-&gt;params-&gt;id()]</code>
      <code>$options['defaults'][$this-&gt;params-&gt;tag()]</code>
      <code>$options['defaults'][$this-&gt;params-&gt;type()]</code>
      <code>$options['defaults'][$this-&gt;params-&gt;uid()]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="4">
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
    </MixedAssignment>
    <MixedReturnTypeCoercion occurrences="2">
      <code>$tags</code>
      <code>string[]</code>
    </MixedReturnTypeCoercion>
  </file>
  <file src="src/Router/RouteParams.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$name</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="test/Integration/IntegrationTestCase.php">
    <MixedArgument occurrences="1">
      <code>$dependencies</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$dependencies['services']</code>
    </MixedArrayAccess>
    <MixedArrayAssignment occurrences="1">
      <code>$dependencies['services']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="1">
      <code>$dependencies</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>Mezzio\Application</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;getContainer()-&gt;get(Mezzio\Application::class)</code>
    </MixedReturnStatement>
  </file>
  <file src="test/Integration/RouteProviderTest.php">
    <MixedArgument occurrences="3">
      <code>$application</code>
      <code>$application</code>
      <code>$application</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="1">
      <code>$config['primo']['webhook']</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="3">
      <code>$application</code>
      <code>$application</code>
      <code>$application</code>
    </MixedAssignment>
  </file>
  <file src="test/Unit/Container/StandardResultSetFactoryFactoryTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Http/PrismicHttpClientFactoryTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <InvalidArgument occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </InvalidArgument>
    <MixedMethodCall occurrences="7">
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <PossiblyUndefinedMethod occurrences="3">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Middleware/Container/PreviewCacheHeadersFactoryTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/Middleware/DocumentResolverTest.php">
    <MixedMethodCall occurrences="6">
      <code>getAttribute</code>
      <code>getAttribute</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <NoInterfaceProperties occurrences="2">
      <code>$this-&gt;handler-&gt;lastRequest</code>
      <code>$this-&gt;handler-&gt;lastRequest</code>
    </NoInterfaceProperties>
    <PossiblyInvalidArgument occurrences="3">
      <code>$this-&gt;resolver</code>
      <code>$this-&gt;resolver</code>
      <code>$this-&gt;resolver</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="2">
      <code>method</code>
      <code>method</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Middleware/PreviewCacheHeadersTest.php">
    <MixedMethodCall occurrences="2">
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <PossiblyUndefinedMethod occurrences="2">
      <code>method</code>
      <code>method</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Middleware/PreviewHandlerTest.php">
    <MixedMethodCall occurrences="13">
      <code>getAttribute</code>
      <code>method</code>
      <code>method</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willThrowException</code>
      <code>willThrowException</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <NoInterfaceProperties occurrences="1">
      <code>$this-&gt;handler-&gt;lastRequest</code>
    </NoInterfaceProperties>
    <PossiblyUndefinedMethod occurrences="5">
      <code>expects</code>
      <code>expects</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Middleware/PrismicTemplateTest.php">
    <MixedMethodCall occurrences="7">
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <NoInterfaceProperties occurrences="1">
      <code>$this-&gt;handler-&gt;lastRequest</code>
    </NoInterfaceProperties>
    <PossiblyUndefinedMethod occurrences="3">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Middleware/WebhookHandlerTest.php">
    <MixedInferredReturnType occurrences="1">
      <code>mixed[]</code>
    </MixedInferredReturnType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;events</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/Unit/ResultSet/TypeMapTest.php">
    <InvalidArgument occurrences="3"/>
    <UndefinedClass occurrences="1">
      <code>UnknownClass</code>
    </UndefinedClass>
  </file>
  <file src="test/Unit/Router/Container/RouteParamsFactoryTest.php">
    <MixedMethodCall occurrences="11">
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <PossiblyInvalidArgument occurrences="2">
      <code>$this-&gt;container</code>
      <code>$this-&gt;container</code>
    </PossiblyInvalidArgument>
    <PossiblyUndefinedMethod occurrences="4">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Router/DocumentResolverTest.php">
    <MissingClosureParamType occurrences="2">
      <code>$arg</code>
      <code>$arg</code>
    </MissingClosureParamType>
    <MixedMethodCall occurrences="21">
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>method</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
      <code>with</code>
    </MixedMethodCall>
    <PossiblyUndefinedMethod occurrences="8">
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
      <code>expects</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/Unit/Router/RouteMatcherTest.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$name</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="1">
      <code>$defaults</code>
    </MixedAssignment>
  </file>
  <file src="test/Unit/Router/RouteParamsTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="1">
      <code>mixed[]</code>
    </MixedInferredReturnType>
  </file>
</files>
